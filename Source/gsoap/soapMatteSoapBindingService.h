/* soapMatteSoapBindingService.h
   Generated by gSOAP 2.7.9l from MatteService.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapMatteSoapBindingService_H
#define soapMatteSoapBindingService_H
#include "soapH.h"
class SOAP_CMAC MatteSoapBindingService : public soap
{ public:
	/// Constructor
	MatteSoapBindingService();
	/// Constructor with engine input+output mode control
	MatteSoapBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	MatteSoapBindingService(soap_mode imode, soap_mode omode);
	/// Destructor frees all data
	virtual ~MatteSoapBindingService();
	/// Initializer used by constructor
	virtual	void MatteSoapBindingService_init(soap_mode imode, soap_mode omode);
	/// Return a copy
	virtual	MatteSoapBindingService *copy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();
	/// Service operations (you should define these):
	/// Web service operation 'GetCollectionList' (return error code or SOAP_OK)
	virtual	int GetCollectionList(m__get_collection_list_request_type *m__GetCollectionListRequest, m__get_collection_list_response_type *m__GetCollectionListResponse);
	/// Web service operation 'AddMedia' (return error code or SOAP_OK)
	virtual	int AddMedia(m__add_media_request_type *m__AddMediaRequest, m__add_media_response_type *m__AddMediaResponse);
};
#endif
